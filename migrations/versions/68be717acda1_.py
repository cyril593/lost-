"""empty message

Revision ID: 68be717acda1
Revises: 
Create Date: 2025-07-06 16:52:38.106456

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '68be717acda1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('permission_id', mysql.SMALLINT(unsigned=True), autoincrement=True, nullable=False),
    sa.Column('permission_name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('permission_id'),
    sa.UniqueConstraint('permission_name')
    )
    op.create_table('roles',
    sa.Column('role_id', mysql.SMALLINT(unsigned=True), autoincrement=True, nullable=False),
    sa.Column('role_name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('role_id'),
    sa.UniqueConstraint('role_name')
    )
    op.create_table('role_permission',
    sa.Column('role_id', mysql.SMALLINT(unsigned=True), nullable=False),
    sa.Column('permission_id', mysql.SMALLINT(unsigned=True), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.permission_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('users',
    sa.Column('user_id', mysql.INTEGER(unsigned=True), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('student_id', sa.String(length=20), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('role_id', mysql.SMALLINT(unsigned=True), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('email', name='_email_uc'),
    sa.UniqueConstraint('student_id')
    )
    op.create_table('admin_audit_logs',
    sa.Column('log_id', mysql.INTEGER(unsigned=True), autoincrement=True, nullable=False),
    sa.Column('admin_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('action', sa.String(length=128), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_table('items',
    sa.Column('item_id', mysql.INTEGER(unsigned=True), autoincrement=True, nullable=False),
    sa.Column('user_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('item_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('item_type', sa.Enum('lost', 'found', name='item_types'), nullable=False),
    sa.Column('location_found', sa.String(length=100), nullable=False),
    sa.Column('date_found', sa.Date(), nullable=False),
    sa.Column('image_filename', sa.String(length=128), nullable=True),
    sa.Column('status', sa.Enum('pending', 'claimed', 'returned', 'archived', name='item_statuses'), nullable=False),
    sa.Column('reported_at', sa.DateTime(), nullable=True),
    sa.Column('qr_code_data', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_table('claims',
    sa.Column('claim_id', mysql.INTEGER(unsigned=True), autoincrement=True, nullable=False),
    sa.Column('item_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('user_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('reported_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', 'resolved', name='claim_statuses'), nullable=False),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('resolution_type', sa.Enum('returned_to_owner', 'kept', 'donated', 'other', name='resolution_types'), nullable=True),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('claim_id')
    )
    op.create_table('claim_messages',
    sa.Column('message_id', mysql.INTEGER(unsigned=True), autoincrement=True, nullable=False),
    sa.Column('claim_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('sender_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('receiver_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['claim_id'], ['claims.claim_id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('message_id')
    )
    op.create_table('claim_reviews',
    sa.Column('review_id', mysql.INTEGER(unsigned=True), autoincrement=True, nullable=False),
    sa.Column('claim_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('reviewer_id', mysql.INTEGER(unsigned=True), nullable=False),
    sa.Column('rating', mysql.SMALLINT(), nullable=False),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['claim_id'], ['claims.claim_id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('review_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('claim_reviews')
    op.drop_table('claim_messages')
    op.drop_table('claims')
    op.drop_table('items')
    op.drop_table('admin_audit_logs')
    op.drop_table('users')
    op.drop_table('role_permission')
    op.drop_table('roles')
    op.drop_table('permissions')
    # ### end Alembic commands ###
